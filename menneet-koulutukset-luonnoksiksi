// üîÅ Aikataulutetaan p√§ivitt√§inen cron-jobi koulutusten p√§ivitykselle
add_action('wp', 'koulutusvahti_aikataulu');

function koulutusvahti_aikataulu() {
    // Tarkistetaan, onko ajastettu teht√§v√§ jo tulossa
    if (!wp_next_scheduled('koulutusvahti_cron')) {
        // Asetetaan ensin nyt alkava ja p√§ivitt√§in toistuva cron-task
        wp_schedule_event(time(), 'daily', 'koulutusvahti_cron');
    }
}

// üîî Cron-hook, joka suorittaa tarkistuksen
add_action('koulutusvahti_cron', 'koulutusvahti_tarkista_ja_paivita');

function koulutusvahti_tarkista_ja_paivita() {
    // Hae kaikki julkaistut koulutukset (post_type 'koulutukset')
    $koulutukset = get_posts(array(
        'post_type'      => 'koulutukset',
        'post_status'    => 'publish',
        'posts_per_page' => -1,
        'fields'         => 'ids', // Saadaan vain post_ID:t, tehokkaampaa muistink√§yt√∂n kannalta
    ));

    if (empty($koulutukset)) {
        return; // Ei koulutuksia, lopetetaan
    }

    $tanaan_ymd = current_time('Ymd');

    foreach ($koulutukset as $post_id) {
        // Hae ilmoittautumisen p√§√§ttymisp√§iv√§ (ACF-kentt√§ tai meta)
        if (function_exists('get_field')) {
            $paattymispaiva = get_field('ilmoittautumisen_paattymispaiva', $post_id);
        } else {
            $paattymispaiva = get_post_meta($post_id, 'ilmoittautumisen_paattymispaiva', true);
        }

        if (empty($paattymispaiva)) {
            continue; // Ei p√§iv√§m√§√§r√§√§, siirryt√§√§n seuraavaan
        }

        // Muutetaan p√§iv√§ ‚Äòd.m.Y‚Äô -> DateTime objekti
        $paattymispaiva_obj = DateTime::createFromFormat('d.m.Y', $paattymispaiva);
        if (!$paattymispaiva_obj) {
            // P√§iv√§yksen muoto v√§√§r√§, ohitetaan
            continue;
        }

        // Muutetaan vertailukelpoinen muoto YYYYMMDD
        $paattymispaiva_ymd = $paattymispaiva_obj->format('Ymd');

        // Jos p√§√§ttymisp√§iv√§ on ennen t√§n√§√§n (= mennytt√§ aikaa)
        if ($paattymispaiva_ymd < $tanaan_ymd) {
            // Vaihdetaan postaus tilaan 'draft' (luonnos)
            wp_update_post(array(
                'ID' => $post_id,
                'post_status' => 'draft',
            ));
        }
    }
}
